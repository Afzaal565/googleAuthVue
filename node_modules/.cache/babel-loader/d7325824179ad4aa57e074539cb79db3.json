{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reactive, readonly } from \"vue\";\nlet Vue3GoogleOauth;\nVue3GoogleOauth = reactive({\n  isInit: false,\n  isAuthorized: false\n});\n\nconst googleAuth = function () {\n  function installClient() {\n    const apiUrl = 'https://apis.google.com/js/api.js';\n    return new Promise(resolve => {\n      let script = document.createElement('script');\n      script.src = apiUrl;\n\n      script.onreadystatechange = script.onload = function () {\n        if (!script.readyState || /loaded|complete/.test(script.readyState)) {\n          setTimeout(function () {\n            resolve();\n          }, 500);\n        }\n      };\n\n      document.getElementsByTagName('head')[0].appendChild(script);\n    });\n  }\n\n  function initClient(config) {\n    return new Promise((resolve, reject) => {\n      window.gapi.load('auth2', () => {\n        window.gapi.auth2.init(config).then(() => {\n          resolve(window.gapi);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    });\n  }\n\n  function Auth() {\n    if (!(this instanceof Auth)) return new Auth();\n    this.instance = null;\n    /* window.gapi.auth2.getAuthInstance() */\n\n    this.load = config => {\n      installClient().then(() => {\n        return initClient(config);\n      }).then(gapi => {\n        this.instance = gapi.auth2.getAuthInstance();\n        this.prompt = config.prompt;\n        Vue3GoogleOauth.instance = gapi.auth2.getAuthInstance();\n        Vue3GoogleOauth.isInit = true;\n        Vue3GoogleOauth.isAuthorized = this.instance.isSignedIn.get();\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    this.signIn = () => {\n      return new Promise((resolve, reject) => {\n        if (!this.instance) {\n          reject(false);\n          return;\n        }\n\n        this.instance.signIn().then(googleUser => {\n          Vue3GoogleOauth.isAuthorized = this.instance.isSignedIn.get();\n          resolve(googleUser);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    };\n\n    this.getAuthCode = () => {\n      return new Promise((resolve, reject) => {\n        if (!this.instance) {\n          reject(false);\n          return;\n        }\n\n        this.instance.grantOfflineAccess({\n          prompt: this.prompt\n        }).then(function (resp) {\n          resolve(resp.code);\n        }).catch(function (error) {\n          reject(error);\n        });\n      });\n    };\n\n    this.signOut = () => {\n      return new Promise((resolve, reject) => {\n        if (!this.instance) {\n          reject(false);\n          return;\n        }\n\n        this.instance.signOut().then(() => {\n          Vue3GoogleOauth.isAuthorized = false;\n          resolve(true);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    };\n  }\n\n  return new Auth();\n}();\n\nexport default {\n  install: (app, options) => {\n    /* eslint-disable */\n    //set config\n    let config = null;\n    let defaultConfig = {\n      scope: 'profile email',\n      prompt: 'select_account'\n    };\n\n    if (typeof options === 'object') {\n      config = Object.assign(defaultConfig, options);\n\n      if (!options.clientId) {\n        throw new Error('clientId is required');\n      }\n    } else {\n      throw new TypeError('invalid option type. Object type accepted only');\n    } //Install Vue plugin\n\n\n    googleAuth.load(config);\n    app.config.globalProperties.$gAuth = googleAuth;\n    app.provide('Vue3GoogleOauth', readonly(Vue3GoogleOauth));\n  }\n};","map":{"version":3,"sources":["C:/Users/premier/Desktop/my app/web-app/node_modules/vue3-google-oauth2/index.js"],"names":["reactive","readonly","Vue3GoogleOauth","isInit","isAuthorized","googleAuth","installClient","apiUrl","Promise","resolve","script","document","createElement","src","onreadystatechange","onload","readyState","test","setTimeout","getElementsByTagName","appendChild","initClient","config","reject","window","gapi","load","auth2","init","then","catch","error","Auth","instance","getAuthInstance","prompt","isSignedIn","get","console","signIn","googleUser","getAuthCode","grantOfflineAccess","resp","code","signOut","install","app","options","defaultConfig","scope","Object","assign","clientId","Error","TypeError","globalProperties","$gAuth","provide"],"mappings":"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","sourcesContent":["import { reactive, readonly } from \"vue\";\nlet Vue3GoogleOauth;\nVue3GoogleOauth = reactive({\n  isInit: false,\n  isAuthorized: false,\n})\nconst googleAuth = (function () {\n\n  function installClient() {\n    const apiUrl = 'https://apis.google.com/js/api.js';\n    return new Promise((resolve) => {\n      let script = document.createElement('script');\n      script.src = apiUrl;\n      script.onreadystatechange = script.onload = function () {\n        if (!script.readyState || /loaded|complete/.test(script.readyState)) {\n          setTimeout(function () {\n            resolve()\n          }, 500)\n        }\n      }\n      document.getElementsByTagName('head')[0].appendChild(script);\n    })\n  }\n\n  function initClient(config) {\n    return new Promise((resolve, reject) => {\n      window.gapi.load('auth2', () => {\n        window.gapi.auth2.init(config)\n          .then(() => {\n            resolve(window.gapi);\n          }).catch((error) => {\n            reject(error);\n          })\n      })\n    })\n\n  }\n\n  function Auth() {\n    if (!(this instanceof Auth))\n      return new Auth();\n    this.instance = null; /* window.gapi.auth2.getAuthInstance() */\n    this.load = (config) => {\n      installClient()\n        .then(() => {\n          return initClient(config)\n        })\n        .then((gapi) => {\n          this.instance = gapi.auth2.getAuthInstance();\n\n          this.prompt = config.prompt;\n          Vue3GoogleOauth.instance = gapi.auth2.getAuthInstance();\n          Vue3GoogleOauth.isInit = true;\n          Vue3GoogleOauth.isAuthorized = this.instance.isSignedIn.get();\n        }).catch((error) => {\n          console.error(error);\n        })\n    };\n\n    this.signIn = () => {\n      return new Promise((resolve, reject) => {\n        if (!this.instance) {\n          reject(false)\n          return\n        }\n        this.instance.signIn()\n          .then(googleUser => {\n            Vue3GoogleOauth.isAuthorized = this.instance.isSignedIn.get();\n            resolve(googleUser);\n          })\n          .catch(error => {\n            reject(error);\n          })\n      })\n    };\n\n    this.getAuthCode = () => {\n      return new Promise((resolve, reject) => {\n        if (!this.instance) {\n          reject(false)\n          return\n        }\n        this.instance.grantOfflineAccess({ prompt: this.prompt })\n          .then(function (resp) {\n            resolve(resp.code)\n          })\n          .catch(function (error) {\n            reject(error)\n          })\n      })\n    };\n\n    this.signOut = () => {\n      return new Promise((resolve, reject) => {\n        if (!this.instance) {\n          reject(false)\n          return\n        }\n        this.instance.signOut()\n          .then(() => {\n            Vue3GoogleOauth.isAuthorized = false;\n            resolve(true)\n          })\n          .catch(error => {\n            reject(error)\n          })\n      })\n    };\n  }\n\n  return new Auth()\n})();\n\nexport default {\n  install: (app, options) => {\n    /* eslint-disable */\n    //set config\n    let config = null\n    let defaultConfig = { scope: 'profile email', prompt: 'select_account' };\n    if (typeof options === 'object') {\n      config = Object.assign(defaultConfig, options);\n      if (!options.clientId) {\n        throw new Error('clientId is required');\n      }\n    } else {\n      throw new TypeError('invalid option type. Object type accepted only');\n    }\n\n    //Install Vue plugin\n    googleAuth.load(config);\n    app.config.globalProperties.$gAuth = googleAuth;\n    app.provide('Vue3GoogleOauth', readonly(Vue3GoogleOauth));\n\n  }\n}"]},"metadata":{},"sourceType":"module"}